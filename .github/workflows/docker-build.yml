name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  workflow_dispatch:
    inputs: {}

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Log in to the Container registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=sha,prefix={{branch}}-,priority=
    - name: Install cosign
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: 'v2.2.4'
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226
    - name: Build
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
      with:
        push: true
        context: .
        platforms: linux/arm64
        file: Dockerfile
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    # - name: Sign the published Docker image
    #   if: ${{ github.event_name != 'pull_request' }}
    #   env:
    #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
    #     TAGS: ${{ steps.meta.outputs.tags }}
    #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
    #   # This step uses the identity token to provision an ephemeral certificate
    #   # against the sigstore community Fulcio instance.
    #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
